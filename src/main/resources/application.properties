spring.application.name=sb-ecom

#spring.h2.console.enabled=true
#spring.datasource.url= jdbc:h2:mem:59d98c6e-2f5d-41fa-be01-bd4e1878a070
# OR we can define our own
#spring.datasource.url=jdbc:h2:mem:test
# jdbc means connection protocol , H2 is database itself
# mem tels that it is in memory database, test is the name of your
# database and you can name it anything.

spring.jpa.show-sql=true
# the above line will show the SQl that is being generated behind the scenes
# in the logs

spring.jpa.properties.hibernate.format_sql=true
# the above line will format the generated SQL queries for better view

spring.jpa.hibernate.ddl-auto=update
# This setting specifies what Hibernate should do with the database schema
# when the application starts up.
# 1) none: No schema changes will be made. Hibernate will not validate
# or update the schema.
# 2) validate: Hibernate will check that the database schema matches
# the entity classes. If there are differences, it will throw an error,
# but it won?t make any changes to the database.
# 3) update: Hibernate will attempt to modify the existing database schema to
# match the entities, adding or altering tables and columns as necessary.
# 4) create: Hibernate will create the schema every time the application starts,
# deleting any existing data in the process.
# 5) create-drop: Hibernate will create the schema at startup and drop it
# when the application shuts down. Here schema exist until program is running

project.image=images/

logging.level.root=INFO
logging.level.org.springframework=DEBUG
logging.level.org.slf4j=DEBUG
logging.level.org.hibernate.sql=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.com.ecommerce.sb_ecom=DEBUG

spring.app.jwtSecret=mySecretKey123912738aopsgjnspkmndfsopkvajoirjg94gf2opfng2moknm
spring.app.jwtExpirationMs=3000000

spring.ecom.app.jwtCookieName=springBootEcom

spring.datasource.url=jdbc:mysql://localhost:3306/ecommerce
spring.datasource.username=root
spring.datasource.password=Max@happy239

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect